import string
import itertools


def solution(new_id):
    # 아이디의 길이는 3<= answer <=15
    # 알파벳 소문자, 숫자, 빼기, 밑줄, 마침표(연속 x 처음과 끝 x)
    possible = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "0", ".", "_", "-"]
    possible += string.ascii_lowercase
    print(possible)
    first = ""
    second = ""
    third = ""
    fourth = ""
    # 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환한다.
    # (한번)
    for i in new_id:
        first += i.lower()
    print(first)
    # 2단계 first의 문자들 중 알파벳, 숫자, 빼기, 밑줄, 마침표 제외하고 없앤다.
    # ( 한번 )
    for j in first:
        if j in possible:
            second += j
    print(second)
    # 3단계 마침표가 2번 이상 연속된 부분을 하나의 마침표로 치환
    # ( 한번 )
    if len(second):
        third = second[0]
        for k in range(1, len(second)):
            if third[-1:] == second[k] and third[-1] == ".":
                continue
            else:
                third += second[k]
    print(third)
    # 4단계 마침표가 처음이나 끝에 위치한다면 제거한다
    # 마지막에 한번 더
    def ends_with(third):
        fourth = ""
        for m in range(0, len(third)):
            if third[m] == "." and (m == 0 or m == len(third) - 1):
                continue
            else:
                fourth += third[m]
        return fourth

    fourth = ends_with(third)
    print(fourth)
    # 5단계 빈 문자열이라면, new_id에 "a"를 대입한다
    # 한번
    if not fourth:
        fourth += "a"
    print(fourth)
    # 6단계 16자 이상이면, 첫 15개 문자를 제외한 나머지 모두 제거
    # 한번
    fifth = fourth[0:15]
    print(fifth)
    # 7단계 2자 이하라면 마지막 문자를 길이가 3이 될 때 까지 끝에 붙인다.
    while len(fifth) < 3:
        fifth += fifth[-1]

    print(fifth)
    answer = ends_with(fifth)
    return answer


print(solution("abcdefghijklmn.p"))