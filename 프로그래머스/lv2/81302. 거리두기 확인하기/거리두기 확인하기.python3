from collections import deque

# P는 응시자가 앉아있는 자리를 의미합니다.
# O는 빈 테이블을 의미합니다.
# X는 파티션을 의미합니다.

def bfs(graph):

    q = deque()
    dx = [1, -1, 0, 0]
    dy = [0, 0, -1, 1]
    for i in range(5):
        for j in range(5):
            if graph[i][j] == 'P':
                q.append((i, j))

                visited = [[False] * 5 for _ in range(5)]
                distance = [[0] * 5 for _ in range(5)]
                visited[i][j] = True
                while q:
                    x, y = q.popleft()
                    for d in range(4):
                        nx, ny = x + dx[d], y + dy[d]
                        if 0 <= nx < 5 and 0 <= ny < 5 and not visited[nx][ny]:
                            if graph[nx][ny] == 'O':
                                q.append((nx, ny))
                                visited[nx][ny] = True
                                distance[nx][ny] = distance[x][y] + 1
                            if graph[nx][ny] == 'P' and distance[x][y] <= 1:
                                return 0
    return 1


def solution(places):
    answer = []
    for i in places:
        answer.append(bfs(i))
    return answer



places = [["POOOP", "OXXOX", "OPXPX", "OOXOX", "POXXP"], ["POOPX", "OXPXP", "PXXXO", "OXXXO", "OOOPP"], ["PXOPX", "OXOXP", "OXPOX", "OXXOP", "PXPOX"], ["OOOXX", "XOOOX", "OOOXX", "OXOOX", "OOOOO"], ["PXPXP", "XPXPX", "PXPXP", "XPXPX", "PXPXP"]]

print(solution(places))